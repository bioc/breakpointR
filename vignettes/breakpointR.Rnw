%\VignetteIndexEntry{How to use breakpointR}
%\VignetteEngine{knitr::knitr}
\documentclass{article}

<<style-knitr, eval=TRUE, echo=FALSE, results="asis">>=
BiocStyle::latex()
@

\author{David Porubsky\thanks{\email{d.porubsky@umcg.nl}}}
\title{How to use breakpointR}

\begin{document}
\maketitle
\tableofcontents
\clearpage
<<options, results='hide', message=FALSE, eval=TRUE, echo=FALSE>>=
library(breakpointR)
options(width=90)
@
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
\section{Introduction}
TODO:DAVID

\section{Quickstart}

The main function of this package is called \Rfunction{breakpointer} and performs all the necessary steps to get from aligned reads to interpretable output.

<<eval=FALSE>>==
breakpointer(inputfolder='folder-with-BAM', outputfolder='output-directory')
@

Although in most cases the above command will produce reasonably good results, it might be worthwile to adjust the default parameters to improve performance and the quality of the results. You can get a description of all available parameters by typing

<<eval=TRUE>>==
?breakpointer
@

After the function has finished, you will find the folder \textbf{output-directory} containing all produced files and plots. This folder contains the following \emph{files} and \textbf{folders}:
\begin{itemize}
\item \emph{breakpointR.config}: This file contains all the parameters that are necessary to reproduce your analysis. You can specify this file as

<<eval=FALSE>>==
breakpointer(..., configfile='breakpointR.config')
@

to run another analysis with the same parameter settings.
\item \textbf{data} TODO:DAVID
\item \textbf{browserfiles} TODO:DAVID
\end{itemize}


\section{Session Info}

<<sessionInfo, results="asis", eval=TRUE>>=
toLatex(sessionInfo())
@


%\bibliography{references}


\end{document}

